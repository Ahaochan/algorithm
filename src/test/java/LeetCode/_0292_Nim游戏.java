package LeetCode;

import org.junit.Assert;
import org.junit.Test;

/**
 * https://leetcode-cn.com/problems/nim-game/
 * 题目描述:
 * 你和你的朋友，两个人一起玩 Nim游戏：桌子上有一堆石头，每次你们轮流拿掉 1 - 3 块石头。 拿掉最后一块石头的人就是获胜者。你作为先手。
 * 你们是聪明人，每一步都是最优解。 编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。
 *
 * 解题思路
 * 博弈游戏
 * 假设对手拿走 1-3 个石子后还剩 n 个, 那么有
 * n <= 3 ------> 赢
 * n == 4 ------> 输, 因为我拿掉1个, 还剩3个, 那对手赢, 拿掉3个, 还剩1个, 还是对手赢.
 * n == 5 ------> 赢, 因为我拿掉1个, 还剩4个, 那么我就赢定了
 * n == 6 ------> 赢, 因为我拿掉2个, 还剩4个, 那么我就赢定了
 * n == 7 ------> 赢, 因为我拿掉3个, 还剩4个, 那么我就赢定了
 * n == 8 ------> 输, 因为我拿掉1,2,3个, 还剩7,6,5个, 那对手再拿掉3,2,1个, 给我留下4个, 我输定了
 * 也就是说, 只要给对手留下4个, 我就赢定了.
 */
public class _0292_Nim游戏 {

    @Test
    public void test1() {
        Assert.assertFalse(canWinNim(4));
    }

    public boolean canWinNim(int n) {
        return n % 4 != 0;
    }
}
